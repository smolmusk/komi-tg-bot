version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: komi-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-komi}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-komi}
      POSTGRES_DB: ${DB_NAME:-komi}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-komi}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - komi-network

  redis:
    image: redis:7-alpine
    container_name: komi-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - komi-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: komi-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${DB_USER:-komi}:${DB_PASSWORD:-komi}@postgres:5432/${DB_NAME:-komi}
      REDIS_URL: redis://redis:6379/0
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_SECRET: ${TELEGRAM_BOT_SECRET}
      MINI_APP_URL: ${MINI_APP_URL:-http://localhost:5173}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-30}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-60000}
      TELEGRAM_BOT_MODE: ${TELEGRAM_BOT_MODE:-polling}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - komi-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
    container_name: komi-frontend
    ports:
      - "5173:80"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
    depends_on:
      - backend
    networks:
      - komi-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  komi-network:
    driver: bridge
